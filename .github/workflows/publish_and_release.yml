name: 'release for main'

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      release_id: ${{ steps.create-release.outputs.release_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Get Version
        run: echo "PACKAGE_VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: app-v${{ env.PACKAGE_VERSION }}
          release_name: Desktop App v${{ env.PACKAGE_VERSION }}
          draft: true
          prerelease: false

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          # - platform: 'ubuntu-20.04'
          #   args: ''
          # - platform: 'windows-latest'
          #   args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 21
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: npm install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_PUBLIC_KEY: ${{ secrets.TAURI_PUBLIC_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  update-gist:
    needs: build-tauri
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get Release ID
        id: get_release
        run: echo "RELEASE_ID=${{ needs.create-release.outputs.release_id }}" >> $GITHUB_ENV

      - name: Fetch latest.json from release
        uses: dsaltares/fetch-gh-release-asset@1.1.2
        with:
          repository: ${{ github.repository }}
          release: ${{ env.RELEASE_ID }}
          file: latest.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync Gist
        uses: popsiclestick/gist-sync-action@v1.2.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gist_url: https://gist.github.com/RemcoDewlde/2b878b3e42effa57334b9fa777626225
          gist_title: Latest JSON Update
          gist_description: Updated latest.json file from the release
          github_file: latest.json

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri, update-gist]
    steps:
      - name: Publish Release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
